//In order ------>> Left - Root - Right
#include <stdio.h>
#include <stdlib.h>

struct node{
    int data ;
    struct node*left;
    struct node*right;
};
struct node* createNode(int val)  
{  
    struct node* Node = (struct node*)malloc(sizeof(struct node));  
    Node->data = val;  
    Node->left = NULL;  
    Node->right = NULL;  
  
    return (Node);  
}  
// Inorder Traversing
void traverseInorder(struct node* root)  
{  
    if (root == NULL)  
        return;  
    traverseInorder(root->left);  
    printf(" %d ", root->data);  
    traverseInorder(root->right);  
}  
//preOrder traverse 
void traversePreorder(struct node*root)
{
    if(root == NULL)
    return;
    printf(" %d ", root->data);
    traversePreorder(root->left);
    traversePreorder(root->right);
}
// PostOrder travrse
void postOrder(struct node*root)
{
    if(root==NULL)
    return;
    postOrder(root->left);
    postOrder(root->right);
    printf(" %d ", root->data);
}
int main() {
    
    struct node* root = createNode(10);  
    root->left = createNode(20);  
    root->right = createNode(30);  
    root->left->left = createNode(40);  
    root->left->right = createNode(50);  
    root->right->left = createNode(60);  
    root->right->right = createNode(70);  
    
     printf("\n The Inorder is : \n");  
    traverseInorder(root); 
    
     printf("\n The Preorder is : \n");
    traversePreorder(root);
    
     printf("\n The post Order is : \n");
    postOrder(root);
    
}
